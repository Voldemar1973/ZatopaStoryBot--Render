
from aiogram import Bot, Dispatcher, executor, types
import logging
import os

API_TOKEN = '8124924572:AAE0LeFfmulT-1ny-d3za98BlQ_MuSRsXVU'
WAYFORPAY_LINK = 'https://secure.wayforpay.com/sub/Shvudka'
ADMIN_ID = 123456789  # ‚Üê –ó–ê–ú–Ü–ù–ò –Ω–∞ —Å–≤—ñ–π Telegram ID

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(
        types.InlineKeyboardButton("üìú –ü—Ä–∞–≤–∏–ª–∞ —á–µ–ª–µ–Ω–¥–∂—É", callback_data="rules"),
        types.InlineKeyboardButton("üîê –ü—ñ–¥–ø–∏—Å–∫–∞ Shvudka", url=WAYFORPAY_LINK)
    )
    await message.answer(
        "–ü—Ä–∏–≤—ñ—Ç! üëã\n–¢–µ–±–µ –∫–æ–ª–∏—Å—å –∑–∞—Ç–æ–ø–ª—é–≤–∞–ª–∏? –ê–±–æ —Ç–∏ –∫–æ–≥–æ—Å—å? üòÖ\n–ü–æ–¥—ñ–ª–∏—Å—å —ñ—Å—Ç–æ—Ä—ñ—î—é —Ç–∞ –≤–∏–≥—Ä–∞–π iPhone 16 üì±\n\n–ù–∞–¥—ñ—à–ª–∏ —Å–≤–æ—é —ñ—Å—Ç–æ—Ä—ñ—é —É –≤–∏–≥–ª—è–¥—ñ —Ç–µ–∫—Å—Ç—É, —Ñ–æ—Ç–æ –∞–±–æ –≤—ñ–¥–µ–æ.",
        reply_markup=keyboard
    )

@dp.message_handler(commands=['rules'])
async def show_rules_cmd(message: types.Message):
    await send_rules(message)

@dp.message_handler(commands=['subscribe'])
async def send_subscribe(message: types.Message):
    await message.answer("üîê –û—Ñ–æ—Ä–º–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É –∑–∞ 1 –≥—Ä–Ω:", reply_markup=subscription_keyboard())

@dp.message_handler(commands=['support'])
async def send_support(message: types.Message):
    await message.answer("‚úâ –ó —É—Å—ñ—Ö –ø–∏—Ç–∞–Ω—å –ø–∏—à–∏ @YourSupportUsername –∞–±–æ –Ω–∞ email support@shvudka.com")

@dp.callback_query_handler(lambda c: c.data == 'rules')
async def send_rules(callback_query: types.CallbackQuery):
    rules_text = (
        "üìú *–ü—Ä–∞–≤–∏–ª–∞ —á–µ–ª–µ–Ω–¥–∂—É 'ZatopaStory'*\n\n"
        "1. –ù–∞–¥—ñ—à–ª–∏ —Å–≤–æ—é —ñ—Å—Ç–æ—Ä—ñ—é –ø—Ä–æ –∑–∞—Ç–æ–ø–ª–µ–Ω–Ω—è (–º–æ–∂–Ω–∞ —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ –∞–±–æ –≤—ñ–¥–µ–æ).\n"
        "2. –ù–∞–π—Ü—ñ–∫–∞–≤—ñ—à—ñ —ñ—Å—Ç–æ—Ä—ñ—ó –ø–æ—Ç—Ä–∞–ø–ª—è—é—Ç—å –¥–æ –ø—É–±–ª—ñ—á–Ω–æ–≥–æ –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è.\n"
        "3. –ü–µ—Ä–µ–º–æ–∂–µ—Ü—å –æ—Ç—Ä–∏–º–∞—î *iPhone 16* üì±\n"
        "4. –ë—ñ–ª—å—à–µ —ñ—Å—Ç–æ—Ä—ñ–π ‚Äî –±—ñ–ª—å—à–µ —à–∞–Ω—Å—ñ–≤!\n"
        "5. –ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–µ—Ä–≤—ñ—Å *Shvudka* ‚Äî —Ü–µ —â–µ –æ–¥–∏–Ω –ø–ª—é—Å –¥–æ —Ç–≤–æ—ó—Ö —à–∞–Ω—Å—ñ–≤ üòâ\n\n"
        "üóì –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ ‚Äî 15 –≤–µ—Ä–µ—Å–Ω—è! –£—Å–ø—ñ—Ö—ñ–≤!"
    )
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, rules_text, parse_mode='Markdown')

@dp.message_handler(content_types=['text', 'photo', 'video'])
async def handle_submission(message: types.Message):
    if ADMIN_ID:
        try:
            await message.copy_to(chat_id=ADMIN_ID)
        except:
            await message.answer("‚ö† –ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–¥–∞—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é –∞–¥–º—ñ–Ω—É. –ü–æ–≤—ñ–¥–æ–º –Ω–∞—Å –ø—Ä–æ –ø–æ–º–∏–ª–∫—É —á–µ—Ä–µ–∑ /support")

    await message.answer(
        "–î—è–∫—É—î–º–æ! –¢–≤–æ—è —ñ—Å—Ç–æ—Ä—ñ—è –∑–±–µ—Ä–µ–∂–µ–Ω–∞ üôå\n\n–•–æ—á–µ—à –±—ñ–ª—å—à–µ —à–∞–Ω—Å—ñ–≤ –Ω–∞ –≤–∏–≥—Ä–∞—à —ñ –∑–∞—Ö–∏—Å—Ç, —è–∫—â–æ –∑–Ω–æ–≤—É –∑–∞—Ç–æ–ø–∏—Ç—å?\n\nüö® –ü—ñ–¥–∫–ª—é—á–∏ Shvudka ‚Äî —Å–µ—Ä–≤—ñ—Å —à–≤–∏–¥–∫–æ—ó –¥–æ–ø–æ–º–æ–≥–∏ –ø—Ä–∏ –∑–∞—Ç–æ–ø–ª–µ–Ω–Ω—è—Ö:\n‚úî –Æ—Ä–∏—Å—Ç\n‚úî –ü—Ä–∏–±–∏—Ä–∞–Ω–Ω—è\n‚úî –û—Å—É—à–µ–Ω–Ω—è\n‚úî –û–∑–æ–Ω—É–≤–∞–Ω–Ω—è\n‚úî –ê–Ω—Ç–∏–ø–ª—ñ—Å–Ω—è–≤–∞\n\nüéÅ –ü–µ—Ä—à–∏–π –º—ñ—Å—è—Ü—å –≤—Å—å–æ–≥–æ –∑–∞ 1 –≥—Ä–Ω!",
        reply_markup=subscription_keyboard()
    )

def subscription_keyboard():
    keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton("üîê –û—Ñ–æ—Ä–º–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É –∑–∞ 1 –≥—Ä–Ω", url=WAYFORPAY_LINK)
    keyboard.add(button)
    return keyboard

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
